
An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # module.aws_es.aws_cloudwatch_log_group.es_cloudwatch_log_group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "es_cloudwatch_log_group" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m              = "elkdev-log_group"
      [32m+[0m [0m[1m[0mretention_in_days[0m[0m = 0
      [32m+[0m [0m[1m[0mtags[0m[0m              = {
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
    }

[1m  # module.aws_es.aws_cloudwatch_log_resource_policy.es_aws_cloudwatch_log_resource_policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_resource_policy" "es_aws_cloudwatch_log_resource_policy" {
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_document[0m[0m = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"logs:PutLogEvents",
                          [32m+[0m [0m"logs:PutLogEventsBatch",
                          [32m+[0m [0m"logs:CreateLogStream",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "es.amazonaws.com"
                        }
                      [32m+[0m [0mResource  = "arn:aws:logs:*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_name[0m[0m     = "elkdev-policy"
    }

[1m  # module.aws_es.aws_elasticsearch_domain.es_domain[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_elasticsearch_domain" "es_domain" {
      [32m+[0m [0m[1m[0maccess_policies[0m[0m       = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "es:*"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = "*"
                      [32m+[0m [0mResource  = "arn:aws:es:us-east-1:305123724980:domain/elkdev/*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0madvanced_options[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mdomain_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mdomain_name[0m[0m           = "elkdev"
      [32m+[0m [0m[1m[0melasticsearch_version[0m[0m = "7.4"
      [32m+[0m [0m[1m[0mendpoint[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mkibana_endpoint[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                  = {
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }

      [32m+[0m [0madvanced_security_options {
          [32m+[0m [0m[1m[0menabled[0m[0m                        = (known after apply)
          [32m+[0m [0m[1m[0minternal_user_database_enabled[0m[0m = (known after apply)

          [32m+[0m [0mmaster_user_options {
              [32m+[0m [0m[1m[0mmaster_user_arn[0m[0m      = (known after apply)
              [32m+[0m [0m[1m[0mmaster_user_name[0m[0m     = (known after apply)
              [32m+[0m [0m[1m[0mmaster_user_password[0m[0m = (sensitive value)
            }
        }

      [32m+[0m [0mcluster_config {
          [32m+[0m [0m[1m[0mdedicated_master_enabled[0m[0m = false
          [32m+[0m [0m[1m[0minstance_count[0m[0m           = 2
          [32m+[0m [0m[1m[0minstance_type[0m[0m            = "t2.small.elasticsearch"
          [32m+[0m [0m[1m[0mzone_awareness_enabled[0m[0m   = true

          [32m+[0m [0mzone_awareness_config {
              [32m+[0m [0m[1m[0mavailability_zone_count[0m[0m = 2
            }
        }

      [32m+[0m [0mdomain_endpoint_options {
          [32m+[0m [0m[1m[0menforce_https[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mtls_security_policy[0m[0m = (known after apply)
        }

      [32m+[0m [0mebs_options {
          [32m+[0m [0m[1m[0mebs_enabled[0m[0m = true
          [32m+[0m [0m[1m[0miops[0m[0m        = 0
          [32m+[0m [0m[1m[0mvolume_size[0m[0m = 25
          [32m+[0m [0m[1m[0mvolume_type[0m[0m = "gp2"
        }

      [32m+[0m [0mencrypt_at_rest {
          [32m+[0m [0m[1m[0menabled[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m = (known after apply)
        }

      [32m+[0m [0mlog_publishing_options {
          [32m+[0m [0m[1m[0mcloudwatch_log_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mlog_type[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnode_to_node_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
        }

      [32m+[0m [0msnapshot_options {
          [32m+[0m [0m[1m[0mautomated_snapshot_start_hour[0m[0m = 23
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mvpc_options {
          [32m+[0m [0m[1m[0mavailability_zones[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-09d4eabab3723173b",
              [32m+[0m [0m"subnet-0c8c65ac3877921b7",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[1m  # module.aws_security_group.aws_security_group.security-group["logstash-sg"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "security-group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "ELKTEST security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "logstash-sg"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "elktesting-sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0a3c8076c106ff7d4"
    }

[1m  # module.aws_security_group.aws_security_group_rule.rule["logstash-sg_egress"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "rule" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Logstash Outbound to Elasticsearch"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.aws_security_group.aws_security_group_rule.rule["logstash-sg_ingress"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "rule" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"172.10.0.0/24",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow Filebeat inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 5044
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 5044
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[1m  # module.ec2-logstash.aws_instance.ec2-logstash1[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "ec2-logstash1" {
      [32m+[0m [0m[1m[0mami[0m[0m                          = "ami-03c5d095bc6ac48da"
      [32m+[0m [0m[1m[0marn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m  = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m            = "us-east-1a"
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m            = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m         = "logstash_iam_profile"
      [32m+[0m [0m[1m[0mid[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                = "t3a.small"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                     = "cse-ken.lee-k8s.test"
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m            = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                    = "subnet-060951f276e50bece"
      [32m+[0m [0m[1m[0mtags[0m[0m                         = {
          [32m+[0m [0m"Name"       = "logstash-dev"
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                      = "default"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                  = {
          [32m+[0m [0m"Name"       = "logstash-dev"
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m       = (known after apply)

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.ec2-logstash.aws_instance.ec2-logstash2[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_instance" "ec2-logstash2" {
      [32m+[0m [0m[1m[0mami[0m[0m                          = "ami-03c5d095bc6ac48da"
      [32m+[0m [0m[1m[0marn[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0massociate_public_ip_address[0m[0m  = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m            = "us-east-1b"
      [32m+[0m [0m[1m[0mcpu_core_count[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mcpu_threads_per_core[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mget_password_data[0m[0m            = false
      [32m+[0m [0m[1m[0mhost_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0miam_instance_profile[0m[0m         = "logstash_iam_profile"
      [32m+[0m [0m[1m[0mid[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0minstance_state[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0minstance_type[0m[0m                = "t3a.small"
      [32m+[0m [0m[1m[0mipv6_address_count[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mipv6_addresses[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mkey_name[0m[0m                     = "cse-ken.lee-k8s.test"
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0moutpost_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mpassword_data[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mplacement_group[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mprimary_network_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0msource_dest_check[0m[0m            = true
      [32m+[0m [0m[1m[0msubnet_id[0m[0m                    = "subnet-0d2254b87b3651de1"
      [32m+[0m [0m[1m[0mtags[0m[0m                         = {
          [32m+[0m [0m"Name"       = "logstash-dev"
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
      [32m+[0m [0m[1m[0mtenancy[0m[0m                      = "default"
      [32m+[0m [0m[1m[0mvolume_tags[0m[0m                  = {
          [32m+[0m [0m"Name"       = "logstash-dev"
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
      [32m+[0m [0m[1m[0mvpc_security_group_ids[0m[0m       = (known after apply)

      [32m+[0m [0mebs_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0msnapshot_id[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }

      [32m+[0m [0mephemeral_block_device {
          [32m+[0m [0m[1m[0mdevice_name[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mno_device[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0mvirtual_name[0m[0m = (known after apply)
        }

      [32m+[0m [0mmetadata_options {
          [32m+[0m [0m[1m[0mhttp_endpoint[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mhttp_put_response_hop_limit[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mhttp_tokens[0m[0m                 = (known after apply)
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_index[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mroot_block_device {
          [32m+[0m [0m[1m[0mdelete_on_termination[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdevice_name[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mencrypted[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0miops[0m[0m                  = (known after apply)
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mvolume_id[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mvolume_size[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mvolume_type[0m[0m           = (known after apply)
        }
    }

[1m  # module.ec2-logstash.aws_lb.load_balancer[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb" "load_balancer" {
      [32m+[0m [0m[1m[0marn[0m[0m                              = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mdns_name[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0menable_cross_zone_load_balancing[0m[0m = false
      [32m+[0m [0m[1m[0menable_deletion_protection[0m[0m       = true
      [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
      [32m+[0m [0m[1m[0minternal[0m[0m                         = true
      [32m+[0m [0m[1m[0mip_address_type[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_type[0m[0m               = "network"
      [32m+[0m [0m[1m[0mname[0m[0m                             = "logstash-nlb"
      [32m+[0m [0m[1m[0msecurity_groups[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0msubnets[0m[0m                          = [
          [32m+[0m [0m"subnet-060951f276e50bece",
          [32m+[0m [0m"subnet-0d2254b87b3651de1",
        ]
      [32m+[0m [0m[1m[0mtags[0m[0m                             = {
          [32m+[0m [0m"Name"       = "logstash-dev"
          [32m+[0m [0m"department" = "cse"
          [32m+[0m [0m"owner"      = "ken.lee"
          [32m+[0m [0m"project"    = "elk-project"
          [32m+[0m [0m"ticket_no"  = "CS-239"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mzone_id[0m[0m                          = (known after apply)

      [32m+[0m [0msubnet_mapping {
          [32m+[0m [0m[1m[0mallocation_id[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m     = (known after apply)
        }
    }

[1m  # module.ec2-logstash.aws_lb_listener.listener["5044"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_listener" "listener" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mload_balancer_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m              = 5044
      [32m+[0m [0m[1m[0mprotocol[0m[0m          = "TCP"
      [32m+[0m [0m[1m[0mssl_policy[0m[0m        = (known after apply)

      [32m+[0m [0mdefault_action {
          [32m+[0m [0m[1m[0morder[0m[0m            = (known after apply)
          [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m             = "forward"
        }
    }

[1m  # module.ec2-logstash.aws_lb_target_group.tg["5044"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group" "tg" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0marn_suffix[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mderegistration_delay[0m[0m               = 90
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mlambda_multi_value_headers_enabled[0m[0m = false
      [32m+[0m [0m[1m[0mload_balancing_algorithm_type[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                               = "test-tg-logstash-nlb-tg-5044"
      [32m+[0m [0m[1m[0mport[0m[0m                               = 5044
      [32m+[0m [0m[1m[0mprotocol[0m[0m                           = "TCP"
      [32m+[0m [0m[1m[0mproxy_protocol_v2[0m[0m                  = false
      [32m+[0m [0m[1m[0mslow_start[0m[0m                         = 0
      [32m+[0m [0m[1m[0mtags[0m[0m                               = {
          [32m+[0m [0m"Environment" = "test"
        }
      [32m+[0m [0m[1m[0mtarget_type[0m[0m                        = "instance"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                             = "vpc-0a3c8076c106ff7d4"

      [32m+[0m [0mhealth_check {
          [32m+[0m [0m[1m[0menabled[0m[0m             = true
          [32m+[0m [0m[1m[0mhealthy_threshold[0m[0m   = 3
          [32m+[0m [0m[1m[0minterval[0m[0m            = 30
          [32m+[0m [0m[1m[0mmatcher[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mpath[0m[0m                = (known after apply)
          [32m+[0m [0m[1m[0mport[0m[0m                = "5044"
          [32m+[0m [0m[1m[0mprotocol[0m[0m            = "TCP"
          [32m+[0m [0m[1m[0mtimeout[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0munhealthy_threshold[0m[0m = 3
        }

      [32m+[0m [0mstickiness {
          [32m+[0m [0m[1m[0mcookie_duration[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0menabled[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m            = (known after apply)
        }
    }

[1m  # module.ec2-logstash.aws_lb_target_group_attachment.tga1["5044"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "tga1" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m             = 5044
      [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtarget_id[0m[0m        = (known after apply)
    }

[1m  # module.ec2-logstash.aws_lb_target_group_attachment.tga2["5044"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lb_target_group_attachment" "tga2" {
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mport[0m[0m             = 5044
      [32m+[0m [0m[1m[0mtarget_group_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtarget_id[0m[0m        = (known after apply)
    }

[1m  # module.logstashec2-role.aws_iam_instance_profile.logstash_iam_profile[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "logstash_iam_profile" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mcreate_date[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "logstash_iam_profile"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mrole[0m[0m        = "logstashec2-role"
      [32m+[0m [0m[1m[0mroles[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m   = (known after apply)
    }

[1m  # module.logstashec2-role.aws_iam_policy.ec2policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "ec2policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "logstash ec2 policy"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "ec2policy"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"es:ESHttpHead",
                          [32m+[0m [0m"es:ESHttpPost",
                          [32m+[0m [0m"es:ESHttpGet",
                          [32m+[0m [0m"es:ESHttpPut",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "VisualEditor0"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
    }

[1m  # module.logstashec2-role.aws_iam_policy.s3policy[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "s3policy" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m = "s3 access policy"
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "s3policy"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::cse-elk.test-backup",
                        ]
                      [32m+[0m [0mSid      = "LogstashListBucket"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::cse-elk.test-backup/*",
                        ]
                      [32m+[0m [0mSid      = "LogstashS3permissions"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
    }

[1m  # module.logstashec2-role.aws_iam_role.logstashec2-role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "logstashec2-role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "logstashec2-role"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)
    }

[1m  # module.logstashec2-role.aws_iam_role_policy_attachment.ec2policy-attach[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ec2policy-attach" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "logstashec2-role"
    }

[1m  # module.logstashec2-role.aws_iam_role_policy_attachment.s3policy-attach[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "s3policy-attach" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "logstashec2-role"
    }

[1m  # module.aws_es.module.aws_security_group.aws_security_group.security-group["aws-es-sg"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "security-group" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Elasticsearch security group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = "aws-es-sg"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "elktesting-sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0a3c8076c106ff7d4"
    }

[1m  # module.aws_es.module.aws_security_group.aws_security_group_rule.rule["aws-es-sg_egress"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "rule" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "outbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "-1"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 0
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # module.aws_es.module.aws_security_group.aws_security_group_rule.rule["aws-es-sg_ingress"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "rule" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"172.10.0.0/24",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "Allow Logstash inbound"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[0m[1mPlan:[0m 22 to add, 0 to change, 0 to destroy.[0m
